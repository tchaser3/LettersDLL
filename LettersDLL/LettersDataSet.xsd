<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LettersDataSet" targetNamespace="http://tempuri.org/LettersDataSet.xsd" xmlns:mstns="http://tempuri.org/LettersDataSet.xsd" xmlns="http://tempuri.org/LettersDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="whsetracConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="whsetracConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LettersDLL.Properties.Settings.GlobalReference.Default.whsetracConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="lettersTableAdapter" GeneratorDataComponentClassName="lettersTableAdapter" Name="letters" UserDataComponentName="lettersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="whsetracConnectionString (Settings)" DbObjectName="whsetrac.dbo.letters" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[letters] WHERE (([LetterID] = @Original_LetterID) AND ([LetterDate] = @Original_LetterDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LetterID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LetterID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_LetterDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LetterDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[letters] ([LetterID], [LetterDescription], [LetterDate]) VALUES (@LetterID, @LetterDescription, @LetterDate);
SELECT LetterID, LetterDescription, LetterDate FROM letters WHERE (LetterID = @LetterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LetterID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LetterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LetterDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LetterDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@LetterDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LetterDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LetterID, LetterDescription, LetterDate FROM dbo.letters</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[letters] SET [LetterID] = @LetterID, [LetterDescription] = @LetterDescription, [LetterDate] = @LetterDate WHERE (([LetterID] = @Original_LetterID) AND ([LetterDate] = @Original_LetterDate));
SELECT LetterID, LetterDescription, LetterDate FROM letters WHERE (LetterID = @LetterID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LetterID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LetterID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LetterDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LetterDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@LetterDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LetterDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LetterID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LetterID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_LetterDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="LetterDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LetterID" DataSetColumn="LetterID" />
              <Mapping SourceColumn="LetterDescription" DataSetColumn="LetterDescription" />
              <Mapping SourceColumn="LetterDate" DataSetColumn="LetterDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LettersDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="LettersDataSet" msprop:Generator_UserDSName="LettersDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="letters" msprop:Generator_TableClassName="lettersDataTable" msprop:Generator_TableVarName="tableletters" msprop:Generator_TablePropName="letters" msprop:Generator_RowDeletingName="lettersRowDeleting" msprop:Generator_RowChangingName="lettersRowChanging" msprop:Generator_RowEvHandlerName="lettersRowChangeEventHandler" msprop:Generator_RowDeletedName="lettersRowDeleted" msprop:Generator_UserTableName="letters" msprop:Generator_RowChangedName="lettersRowChanged" msprop:Generator_RowEvArgName="lettersRowChangeEvent" msprop:Generator_RowClassName="lettersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LetterID" msprop:Generator_ColumnVarNameInTable="columnLetterID" msprop:Generator_ColumnPropNameInRow="LetterID" msprop:Generator_ColumnPropNameInTable="LetterIDColumn" msprop:Generator_UserColumnName="LetterID" type="xs:int" />
              <xs:element name="LetterDescription" msprop:Generator_ColumnVarNameInTable="columnLetterDescription" msprop:Generator_ColumnPropNameInRow="LetterDescription" msprop:Generator_ColumnPropNameInTable="LetterDescriptionColumn" msprop:Generator_UserColumnName="LetterDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LetterDate" msprop:Generator_ColumnVarNameInTable="columnLetterDate" msprop:Generator_ColumnPropNameInRow="LetterDate" msprop:Generator_ColumnPropNameInTable="LetterDateColumn" msprop:Generator_UserColumnName="LetterDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:letters" />
      <xs:field xpath="mstns:LetterID" />
    </xs:unique>
  </xs:element>
</xs:schema>